TEMPLATE = lib        # тип исполняемого файла (библиотека)
TARGET   = PanoramaK  # название

#############################################################
#                  подключение модулей QT6                  #
QT += core
#############################################################

# дирректория куда помещается бинарный файл
include(config/path/path.pri)
DESTDIR = $${DST_PATH}

# оптимизации для release сборки
include(config/optimization/optimization.pri)

# настройка конфигурации компилятора
include(config/configure/configure.pri)

#############################################################
#               подключение заголовочных файлов             #
#############################################################
HEADERS += source/PanoramaKCommon.h

#############################################################
#              подключение файлов исходного кода            #
#############################################################

#############################################################
#               подключение собственных классов             #
#############################################################
HEADERS += source/Interface.h
SOURCES += source/Interface.cpp

HEADERS += source/LibService/LibService.h
SOURCES += source/LibService/LibService.cpp

#############################################################
#                  подключение расширений                   #
#############################################################
include(../PanoramaK_lib/PanoramaK_lib.pri)
include(libs/settings/settings.pri)
include(libs/PowerSwrSeries/PowerSwrSeries.pri)

#############################################################
#               подключение внешних библиотек               #
#############################################################
include(../../third_party/gsl/gsl.pri)
include(../../third_party/range_v3/range_v3.pri)

#############################################################
windows {
    QMAKE_LFLAGS_WINDOWS += /DEF:"$$PWD/PanoramaK.def"
}
